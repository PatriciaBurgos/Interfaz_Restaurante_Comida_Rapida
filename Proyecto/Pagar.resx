<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>